
obych = [90.0013 88.6118 88.9288 89.7044 89.8225
    90.3853 91.1127 91.2653 91.1096 90.9345
    91.1423 91.4292 91.6712 92.6962 92.5848
    92.9200 92.8622 92.3880 92.4074 92.7126
    93.2221 93.3581 94.5054 95.0262 94.8700
    96.0649 96.1079 96.9483 97.2394 96.0686
    96.1021 97.0121 97.2568 97.1490 96.4172
    96.0924 96.5918 96.6379 96.7402 96.6657
    97.2300 97.3261 97.0530 97.0226 97.4402
    97.5499 98.0562 98.2236 98.0726 97.8335];
% disp(obych);

% Нормализуем данные
min_vals = min(obych);
max_vals = max(obych);

% Создадим матрицу входных значений
vxod = obych(:, 1:4);
% disp(vxod);

% Создадим матрицу ожидаемых выходных значений:
vixod = obych(:, 5);
% disp(vixod);

% Создадим нейронную сеть для прогнозирования:
prognoz = newff(minmax(vxod'), [15 1], { 'tansig' 'purelin'});
% disp(prognoz);

% Обучим ее
prognoz = train(prognoz, vxod', vixod');

% Создадим тестовую выборку для проверки результатов обучения
test = [97.9550 97.9559 98.3657 99.0180 99.9971
    99.9430 100.0348 100.2192 100.6798 102.5761
    103.7908 105.0604 108.0104 109.5782 107.7409
    107.1758 106.1878 104.2361 103.3837 99.4215];

test_vxod = test(:, 1:4);
% disp("test_vxod");
% disp(test_vxod);

test_vixod = test(:, 5);
disp("test_vixod");
disp(test_vixod);

% Проведем моделирование обученной сети на тестовых данных:
pred = sim(prognoz, test_vxod');
disp(pred);
